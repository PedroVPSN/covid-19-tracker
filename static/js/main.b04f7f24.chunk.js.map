{"version":3,"sources":["components/Cards.js","api/index.js","components/Chart.js","components/SelectedCountry.js","components/Footer.js","App.js","index.js","images/covid19image.jpeg","images/stay.png","images/protect.png","images/save.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","newUrl","axios","get","console","log","getDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","getApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","tittle","text","SelectedCountry","handleCountryChanger","fetchedCountries","setFetchCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","src","stay","alt","protect","save","App","state","newData","setState","this","coronaImage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b04f7f24.chunk.js","sourcesContent":["import React, { Fragment }from 'react';\nimport CountUp from 'react-countup';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if(!confirmed)\n    return 'Loading...'\n    return (\n        <Fragment>\n        <div className=\"cards infected\">\n            <p>Infected</p>\n            <h3><CountUp start={0} end={confirmed.value} duration={2} separator={','}/></h3>\n            <h4>{new Date(lastUpdate).toDateString()}</h4>\n            <p>Active cases of COVID-19</p>\n        </div>\n        <div className=\"cards recovered\">\n            <p>Recovered</p>\n            <h3><CountUp start={0} end={recovered.value} duration={2} separator={','}/></h3>\n            <h4>{new Date(lastUpdate).toDateString()}</h4>\n            <p>Recoveries from COVID-19</p>\n        </div>\n        <div className=\"cards deaths\">\n            <p>Deaths</p>\n            <h3><CountUp start={0} end={deaths.value} duration={2} separator={','}/></h3>\n            <h4>{new Date(lastUpdate).toDateString()}</h4>\n            <p>Deaths from COVID-19</p>\n        </div>\n        </Fragment>\n    )\n};\n\nexport default Cards\n","import axios from 'axios';\n\n//store the api const url \nconst url = \"https://covid19.mathdro.id/api\";\n\n//Cards data\nexport const fetchData = async (country) => {\n    let newUrl = url;\n\n    if(country) {\n        newUrl  = `${url}/countries/${country}`\n    }\n\n    try {\n        //destructuring\n        const {data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(newUrl); \n        //getting only data needed\n        return { confirmed, recovered, deaths, lastUpdate };\n\n    } catch (error) {\n        console.log(error);\n    };\n};\n\n//Chart data\nexport const getDailyData = async () => {\n    try{\n        const { data } = await axios.get(`${url}/daily`)\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n\n        return modifiedData\n    } catch(error) {\n\n    };\n};\n\n//Select box\nexport const fetchCountries = async () => {\n    try{\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name)\n        \n    } catch(error) {\n        console.log(error);\n    };\n};\n","import React, { useState, useEffect } from 'react'\nimport { getDailyData} from '../api';\nimport { Line, Bar } from 'react-chartjs-2'\n\n\nconst Chart = ({data: { confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const getApi = async () => {\n           setDailyData(await getDailyData()) \n        }\n        getApi()\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n            ? (\n            <Line data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: 'Infected',\n                    borderColor: 'rgb(245, 233, 61)',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'rgb(134, 129, 129)',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                }]\n            }}\n        />) : null\n    );\n\n        const barChart = (\n            confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgb(245, 233, 61)',\n                                'rgb(86, 219, 33)',\n                                'rgb(134, 129, 129)'\n                            ],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        tittle: { display: true, text: `Current state in ${country}`}\n                    }}\n                />\n            ) : null\n        );\n\n    return (\n        <div className=\"chart\">\n           {country ? barChart : lineChart}\n           \n        </div>\n    )\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react'\nimport { NativeSelect, FormControl } from '@material-ui/core'\nimport { fetchCountries } from '../api'\n\nconst SelectedCountry = ({ handleCountryChanger }) => {\n    const [fetchedCountries, setFetchCountries] = useState([]);\n\n    useEffect (() => {\n        const fetchAPI = async () => {\n            setFetchCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchCountries]);\n\n    console.log(fetchedCountries);\n\n    return (\n      <FormControl className=\"selectCountry\">\n         <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChanger(e.target.value)}>\n             <option value=\"\">Global</option>\n             {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n         </NativeSelect> \n      </FormControl>\n    )\n}\n\nexport default SelectedCountry\n","import React from 'react'\nimport stay from '../images/stay.png'\nimport protect from '../images/protect.png'\nimport save from '../images/save.png'\n\nconst Footer = () => {\n    return (\n        <div className=\"footerContainer\">\n            <div>\n                <img className=\"footerImage\" src={stay} alt=\"Stay at home\"/>\n            </div>\n            <div >\n                <img className=\"footerImage\" src={protect} alt=\"Protect NHS\" />\n            </div>\n            <div >\n                <img className=\"footerImage\" src={save} alt=\"Save lives\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Component, Fragment } from 'react'\nimport Cards from './components/Cards'\nimport Chart from './components/Chart'\nimport SelectedCountry from './components/SelectedCountry'\nimport './App.css'\nimport {fetchData} from './api'\nimport coronaImage from './images/covid19image.jpeg'\nimport Footer from './components/Footer'\n\nexport class App extends Component {\n  //initial state\n  state = {\n    data: {},\n    country: ''\n  }\n//request the fecth data\n async componentDidMount() {\n    const newData = await fetchData(); //fetch the data and store in newData\n\n    this.setState({ data: newData })\n\n  }\n//request and fecth country data\n  handleCountryChanger = async (country) => {\n    const newData = await fetchData(country)\n\n    this.setState({ data: newData, country: country });\n\n  }\n\n  render() {\n    //destructuring \n    const { data, country } = this.state;\n    return (\n      //display the data in Cards components\n      <Fragment>\n        <div className=\"image\">\n          <img src={coronaImage} alt=\"corona\" />\n        </div>\n        <div className=\"cardContainer\">\n          <Cards data={data}/>\n        </div>\n        <div className=\"container\"> \n          <SelectedCountry handleCountryChanger={this.handleCountryChanger}/>\n          <Chart data={data} country={country}/>\n        </div>\n        <div className=\"footerColor\">\n          <Footer/>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/covid19image.b9c657be.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/stay.bc849f94.png\";","module.exports = __webpack_public_path__ + \"static/media/protect.1227a9cc.png\";","module.exports = __webpack_public_path__ + \"static/media/save.1cf61f12.png\";"],"sourceRoot":""}